import streamlit as st
import openai
import base64
from PIL import Image
import io
import os

# –ù–∞—Å—Ç—Ä–æ–π–∫–∏ —Å—Ç—Ä–∞–Ω–∏—Ü—ã
st.set_page_config(page_title="–†–∞—Å–ø–æ–∑–Ω–∞–≤–∞–Ω–∏–µ –≤–∏–∑–∏—Ç–∫–∏", layout="centered")

# –í–≤–æ–¥ –∫–ª—é—á–∞ OpenAI (–º–æ–∂–Ω–æ —á–µ—Ä–µ–∑ secrets, –µ—Å–ª–∏ –Ω–∞ Streamlit Cloud)
openai.api_key = st.secrets["OPENAI_API_KEY"]

st.title("üßæ –†–∞—Å–ø–æ–∑–Ω–∞–≤–∞–Ω–∏–µ –≤–∏–∑–∏—Ç–∫–∏")
st.write("–ó–∞–≥—Ä—É–∑–∏—Ç–µ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ, —á—Ç–æ–±—ã –∏–∑–≤–ª–µ—á—å –∫–æ–Ω—Ç–∞–∫—Ç–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ —Å –ø–æ–º–æ—â—å—é GPT-4o.")

uploaded_file = st.file_uploader("–ó–∞–≥—Ä—É–∑–∏—Ç–µ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ –≤–∏–∑–∏—Ç–∫–∏", type=["png", "jpg", "jpeg"])

if uploaded_file is not None:
    image = Image.open(uploaded_file)
    st.image(image, caption="–ó–∞–≥—Ä—É–∂–µ–Ω–Ω–æ–µ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ", use_column_width=True)

    if st.button("üîç –†–∞—Å–ø–æ–∑–Ω–∞—Ç—å"):
        with st.spinner("–û–±—Ä–∞–±–æ—Ç–∫–∞ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è..."):
            # –ü—Ä–µ–æ–±—Ä–∞–∑–æ–≤–∞–Ω–∏–µ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è –≤ base64
            buffered = io.BytesIO()
            image.save(buffered, format="PNG")
            img_base64 = base64.b64encode(buffered.getvalue()).decode()

            response = openai.chat.completions.create(
                model="gpt-4o",
                messages=[
                    {"role": "system", "content": "–¢—ã –ø–æ–º–æ—â–Ω–∏–∫, –∫–æ—Ç–æ—Ä—ã–π –∏–∑–≤–ª–µ–∫–∞–µ—Ç –¥–∞–Ω–Ω—ã–µ —Å –≤–∏–∑–∏—Ç–∫–∏."},
                    {
                        "role": "user",
                        "content": [
                            {
                                "type": "text",
                                "text": "–ò–∑–≤–ª–µ–∫–∏ —Å —ç—Ç–æ–π –≤–∏–∑–∏—Ç–∫–∏ —Å–ª–µ–¥—É—é—â–∏–µ –¥–∞–Ω–Ω—ã–µ –≤ —Ñ–æ—Ä–º–∞—Ç–µ JSON:\n"
                                        "- full_name\n"
                                        "- position\n"
                                        "- company_name\n"
                                        "- email\n"
                                        "- website\n"
                                        "- address"
                            },
                            {
                                "type": "image_url",
                                "image_url": {
                                    "url": f"data:image/png;base64,{img_base64}"
                                },
                            },
                        ],
                    },
                ],
                temperature=0.2,
            )

            result_text = response.choices[0].message.content
            st.subheader("üìã –†–µ–∑—É–ª—å—Ç–∞—Ç:")
            st.code(result_text, language="json")